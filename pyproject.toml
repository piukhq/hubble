[tool.poetry]
name = "hubble"
version = "0.0.0"
description = "BPL Activity System"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
repository = "https://github.com/binkhq/hubble"

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.tools.uksouth.bink.sh/simple"
default = false
secondary = false

[tool.poetry.dependencies]
python = "^3.11"
SQLAlchemy = "^1.4.41"
alembic = "^1.8.1"
psycopg2-binary = "^2.9.3"
environs = "^9.5.0"
pydantic = "^1.10.2"
kombu = "^5.2.4"
typer = "^0.6.1"
prettyprinter = "^0.18.0"
sentry-sdk = "^1.9.8"
cosmos-message-lib = {version = "^1.3.0", source = "bink-pypi"}

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
mypy = "^1.0.1"
xenon = "^0.9.0"
isort = "^5.10.1"
pytest-cov = "^3.0.0"
pytest = "^7.1.3"
refurb = "^1.13.0"
ruff = "^0.0.252"
ipython = "^8.10.0"

[tool.poetry.scripts]
hubble = 'hubble.cli:cli'

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
lines_between_types = 1

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = '^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)'

[tool.poetry-dynamic-versioning.substitution]
files = ['hubble/version.py']

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"


[tool.ruff]
line-length = 120
show-source = true
target-version = "py311"
select = [
    "F",    # Pyflakes (F)
    "E", 
    "W",    # pycodestyle (E, W)
    "C90",  # mccabe (C90)
    # isort (I)
    # pydocstyle (D)
    "UP",   # pyupgrade (UP)
    "N",    # pep8-naming (N)
    "YTT",  # flake8-2020 (YTT)
    "ANN",  # flake8-annotations (ANN)
    "S",    # flake8-bandit (S)
    "BLE",  # flake8-blind-except (BLE)
    # flake8-boolean-trap (FBT)
    "B",    # flake8-bugbear (B)
    "A",    # flake8-builtins (A)
    "C4",   # flake8-comprehensions (C4)
    "T10",  # flake8-debugger (T10)
    # flake8-errmsg (EM)
    "ICN",  # flake8-import-conventions (ICN)
    "T20",  # flake8-print (T20)
    # "PT",   # flake8-pytest-style (PT)
    "Q",    # flake8-quotes (Q)
    # flake8-return (RET)
    "SIM",  # flake8-simplify (SIM)
    "TID",  # flake8-tidy-imports (TID)
    "ARG",  # flake8-unused-arguments (ARG)
    "DTZ",  # flake8-datetimez (DTZ)
    # "ERA",  # eradicate (ERA) until we can remove commented out code this has to stay deactivated
    # pandas-vet (PD)
    # pygrep-hooks (PGH)
    "PLC",
    "PLE",
    "PLR",
    "PLW",  # Pylint (PLC, PLE, PLR, PLW)
    "RUF",  # Ruff-specific rules (RUF)
]
ignore = [
    "ANN101", 
    "B008"
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "ARG001"]
"hubble/db/models.py" = ["A003"]