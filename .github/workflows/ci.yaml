name: ci

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      LOG_FORMATTER: brief
      DATABASE_URI: "postgresql://postgres@127.0.0.1:5432/hubble_test"
      RABBIT_DSN: "amqp://guest:guest@127.0.0.1:5672/"
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: hubble_test
          POSTGRES_HOST_AUTH_METHOD: trust
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install pipenv
      - run: pipenv install --dev --ignore-pipfile
      - run: pipenv run alembic upgrade head
      - run: pipenv run xenon --no-assert --max-average A --max-modules B --max-absolute B .
      - run: pipenv run pylint app tests
      - run: pipenv run black --check .
      - run: pipenv run isort --check .
      - run: pipenv run mypy app tests
      - run: pipenv run pytest --verbose --cov app --cov-report term-missing
  release_dev:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    name: release_dev
    environment: development
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-output name=date::$(date +'%FT%H%M%SZ')"
        id: date
      - uses: docker/login-action@v1
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ steps.date.outputs.date }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:latest
  release_staging:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_staging
    environment: staging
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: docker/login-action@v1
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging-${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging
  release_production:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_production
    environment: production
    needs: [release_staging]
    runs-on: ubuntu-latest
    container: ghcr.io/binkhq/tagbot:latest
    steps:
      - run: |
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod-${{ github.event.release.tag_name }}
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod
