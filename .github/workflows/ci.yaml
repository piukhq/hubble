name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      LOG_FORMATTER: brief
      DATABASE_URI: "postgresql://postgres@127.0.0.1:5432/hubble_test"
      RABBIT_DSN: "amqp://guest:guest@127.0.0.1:5672/"
      REDIS_URL: redis://127.0.0.1:6379/0
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: hubble_test
          POSTGRES_HOST_AUTH_METHOD: trust
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install poetry
      - run: poetry config virtualenvs.create false
      - run: poetry config http-basic.azure jeff ${{ secrets.AZURE_DEVOPS_PAT }}
      - run: poetry install
      - run: alembic upgrade head
      - run: xenon --no-assert --max-average A --max-modules B --max-absolute B .
      - run: ruff hubble tests
      - run: black --check .
      - run: isort --check .
      - run: mypy .
      - run: refurb hubble tests
      - run: pytest --verbose --cov hubble --cov-report term-missing
  release_dev:
    if: github.event_name == 'push'
    name: release_dev
    environment: development
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "container_tag=$(date +'%FT%H%M%SZ')" >> $GITHUB_ENV
      - uses: docker/login-action@v2
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          build-args: |
            PIP_INDEX_URL=${{ secrets.AZURE_DEVOPS_PAT_URL }}
          context: .
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ env.container_tag }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:latest
  release_staging:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_staging
    environment: staging
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: tag_check
        run: |
          if ! [[ ${{ github.event.release.tag_name }} =~ [0-9]+.[0-9]+.[0-9]+ ]]; then
            exit 1;
          fi
      - uses: docker/login-action@v2
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v4
        with:
          build-args: |
            PIP_INDEX_URL=${{ secrets.AZURE_DEVOPS_PAT_URL }}
          context: .
          push: true
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging-${{ github.event.release.tag_name }}
            binkcore.azurecr.io/${{ github.event.repository.name }}:staging
  release_production:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: release_production
    environment: production
    needs: [release_staging]
    runs-on: ubuntu-latest
    container: ghcr.io/binkhq/tagbot:latest
    steps:
      - run: |
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod-${{ github.event.release.tag_name }}
          tagbot \
            --username binkcore \
            --password ${{ secrets.ACR_BINKCORE_PASSWORD }} \
            --source binkcore.azurecr.io/${{ github.event.repository.name }}:${{ github.event.release.tag_name }} \
            --tag prod
